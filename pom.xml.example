<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.7.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.litesoftwares</groupId>
	<artifactId>pingthread</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>pingthread</name>
	<description>PingThread - Convert Twitter Threads to readable blog posts</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<!--		<dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
                </dependency>-->

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!--	<dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>7.7.0</version>
            </dependency>-->

		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-core</artifactId>
			<version>4.0.7</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.twitter4j/twitter4j-stream -->
		<dependency>
			<groupId>org.twitter4j</groupId>
			<artifactId>twitter4j-stream</artifactId>
			<version>4.0.7</version>
		</dependency>

		<dependency>
			<groupId>com.github.redouane59</groupId>
			<artifactId>twittered</artifactId>
			<version>2.21</version>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.8</version>
		</dependency>

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.3.2</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

	</dependencies>

	<repositories>
	<repository>
		<id>jitpack.io</id>
		<url>https://jitpack.io</url>
	</repository>
	</repositories>

	<build>
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>

				<!-- Note that we're executing the Flyway plugin in the "generate-sources"
                  phase -->
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>migrate</goal>
						</goals>
					</execution>
				</executions>

				<!-- Note that we need to prefix the db/migration path with filesystem:
                  to prevent Flyway from looking for our migration scripts only on the classpath -->
				<configuration>
					<driver>com.mysql.cj.jdbc.Driver</driver>
					<url>jdbc:mysql://localhost:3306/pingthread?useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true</url>
					<user>root</user>
					<password></password>
					<locations>
						<location>filesystem:src/main/resources/db/migration</location>
					</locations>
				</configuration>
			</plugin>

			<!-- JOOQ code gen -->

			<plugin>
				<!-- Specify the maven code generator plugin -->
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>3.11.9</version>
				<!-- The plugin should hook into the generate goal -->
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
				</dependencies>

				<!-- Specify the plugin configuration. The configuration format is the
                same as for the standalone code generator -->
				<configuration>
					<!-- JDBC connection parameters -->
					<jdbc>
						<driver>com.mysql.cj.jdbc.Driver</driver>
						<url>jdbc:mysql://localhost/pingthread?useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true</url>
						<user>root</user>
						<password></password>
					</jdbc>

					<!-- Generator parameters -->
					<generator>

						<database>
							<name>org.jooq.meta.mysql.MySQLDatabase</name>
							<includes>.*</includes>
							<excludes></excludes>
							<inputSchema>pingthread</inputSchema>
						</database>

						<target>
							<packageName>com.litesoftwares.model</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
